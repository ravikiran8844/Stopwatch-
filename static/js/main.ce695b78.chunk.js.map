{"version":3,"sources":["components/Stopwatch/index.js","App.js","index.js"],"names":["StopWatch","state","minutes","seconds","isOn","startTimer","setState","timerId","setInterval","statusChange","prevState","stopTimer","clearInterval","resetTimer","this","newSeconds","newMinutes","className","src","alt","type","onClick","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAGMA,E,4MACJC,MAAQ,CACNC,QAAS,EACTC,QAAS,EACTC,MAAM,G,EAGRC,WAAa,WACI,EAAKJ,MAAbG,OAEL,EAAKE,SAAS,CAACF,MAAM,IACrB,EAAKG,QAAUC,YAAY,EAAKC,aAAc,KAEjD,E,EAEDA,aAAe,WACb,EAAKH,UAAS,SAAAI,GAAS,MAAK,CAC1BR,QACwB,KAAtBQ,EAAUP,QAAiBO,EAAUR,QAAU,EAAIQ,EAAUR,QAC/DC,QAA+B,KAAtBO,EAAUP,QAAiBO,EAAUP,QAAU,EAAI,EAHvC,GAKxB,E,EAEDQ,UAAY,WACV,EAAKL,SAAS,CAACF,MAAM,IACrBQ,cAAc,EAAKL,QACpB,E,EAEDM,WAAa,WACX,EAAKP,SAAS,CAACJ,QAAS,EAAGC,QAAS,EAAGC,MAAM,IAC7CQ,cAAc,EAAKL,QACpB,E,4CAED,WACE,MAA2BO,KAAKb,MAAzBC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,QACVY,EAAaZ,EAAU,GAAV,WAAmBA,GAAnB,UAAkCA,GAC/Ca,EAAad,EAAU,GAAV,WAAmBA,GAAnB,UAAkCA,GACrD,OACE,sBAAKe,UAAU,iBAAf,UACE,oBAAIA,UAAU,eAAd,uBACA,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBACEC,IAAI,+DACJD,UAAU,QACVE,IAAI,cAEN,mBAAGF,UAAU,aAAb,sBAEF,oBAAIA,UAAU,iBAAd,mBAAmCD,EAAnC,YAAiDD,KACjD,sBAAKE,UAAU,gBAAf,UACE,wBACEG,KAAK,SACLH,UAAU,YACVI,QAASP,KAAKT,WAHhB,mBAOA,wBAAQe,KAAK,SAASH,UAAU,UAAUI,QAASP,KAAKH,UAAxD,kBAGA,wBACES,KAAK,SACLH,UAAU,aACVI,QAASP,KAAKD,WAHhB,2BAWT,K,GAxEqBS,aA2ETtB,ICxEAuB,G,MAFH,kBAAM,cAAC,EAAD,GAAN,GCAZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,Q","file":"static/js/main.ce695b78.chunk.js","sourcesContent":["import {Component} from 'react'\nimport './index.css'\n\nclass StopWatch extends Component {\n  state = {\n    minutes: 0,\n    seconds: 0,\n    isOn: false,\n  }\n\n  startTimer = () => {\n    const {isOn} = this.state\n    if (!isOn) {\n      this.setState({isOn: true})\n      this.timerId = setInterval(this.statusChange, 1000)\n    }\n  }\n\n  statusChange = () => {\n    this.setState(prevState => ({\n      minutes:\n        prevState.seconds === 59 ? prevState.minutes + 1 : prevState.minutes,\n      seconds: prevState.seconds !== 59 ? prevState.seconds + 1 : 0,\n    }))\n  }\n\n  stopTimer = () => {\n    this.setState({isOn: false})\n    clearInterval(this.timerId)\n  }\n\n  resetTimer = () => {\n    this.setState({minutes: 0, seconds: 0, isOn: false})\n    clearInterval(this.timerId)\n  }\n\n  render() {\n    const {minutes, seconds} = this.state\n    const newSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`\n    const newMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`\n    return (\n      <div className=\"main-container\">\n        <h1 className=\"main-heading\">Stopwatch</h1>\n        <div className=\"watch-container\">\n          <div className=\"timer-heading\">\n            <img\n              src=\"https://assets.ccbp.in/frontend/react-js/stopwatch-timer.png\"\n              className=\"image\"\n              alt=\"stopwatch\"\n            />\n            <p className=\"timer-name\">Timer</p>\n          </div>\n          <h1 className=\"result-heading\">{`${newMinutes}:${newSeconds}`}</h1>\n          <div className=\"btn-container\">\n            <button\n              type=\"button\"\n              className=\"btn green\"\n              onClick={this.startTimer}\n            >\n              Start\n            </button>\n            <button type=\"button\" className=\"btn red\" onClick={this.stopTimer}>\n              Stop\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn yellow\"\n              onClick={this.resetTimer}\n            >\n              Reset\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default StopWatch\n","import Stopwatch from './components/Stopwatch'\n\nimport './App.css'\n\nconst App = () => <Stopwatch />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}